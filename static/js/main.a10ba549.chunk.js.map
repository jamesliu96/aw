{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Op","B65","s2","s","run","op","dict65","input","Encode","str","map","indexOf","join","encode","codes","Uint16Array","length","i","charCodeAt","btoa","String","fromCharCode","Uint8Array","buffer","toBin","Decode","some","validate","Error","binary","atob","bytes","fromBin","charAt","decode","ERRSTR","DEFAULT_DICT","debouncedPushState","debounce","url","URL","window","location","href","searchParams","set","history","pushState","document","title","App","useState","setDict65","setInput","setOp","output","setOutput","outputRef","useRef","dictIs65","dict","Set","size","is65","outputError","useEffect","out","_","search","URLSearchParams","d","get","o","handlePopstate","state","addEventListener","removeEventListener","Grid","container","component","direction","justify","alignItems","spacing","style","margin","item","TextField","multiline","rows","label","variant","value","error","helperText","width","onChange","e","currentTarget","Switch","color","checked","InputProps","readOnly","inputRef","onClick","current","select","navigator","clipboard","writeText","execCommand","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a10ba549.chunk.js","sourcesContent":["import { FC, useEffect, useRef, useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport { debounce } from '@material-ui/core';\n\nenum Op {\n  Encode,\n  Decode,\n}\n\nfunction toBin(str: string) {\n  const codes = new Uint16Array(str.length);\n  for (let i = 0; i < codes.length; i++) codes[i] = str.charCodeAt(i);\n  return btoa(String.fromCharCode(...new Uint8Array(codes.buffer)));\n}\nfunction fromBin(str: string) {\n  const binary = atob(str);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < bytes.length; i++) bytes[i] = binary.charCodeAt(i);\n  return String.fromCharCode(...new Uint16Array(bytes.buffer));\n}\n\nconst B65 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nconst s2 = (s: string) => [...s];\n\nconst encode = (str: string, dict65: string): string =>\n  s2(str)\n    .map((s) => s2(dict65)[B65.indexOf(s)])\n    .join('');\nconst decode = (str: string, dict65: string): string =>\n  s2(str)\n    .map((s) => B65.charAt(s2(dict65).indexOf(s)))\n    .join('');\nconst validate = (str: string, dict65: string): boolean =>\n  !s2(str).some((s) => s2(dict65).indexOf(s) < 0);\n\nfunction run(op: Op, dict65: string, input: string): string {\n  switch (op) {\n    case Op.Encode: {\n      return encode(toBin(input), dict65);\n    }\n    case Op.Decode: {\n      if (!validate(input, dict65)) throw new Error('execution failed');\n      return fromBin(decode(input, dict65));\n    }\n  }\n}\n\nconst is65 = (dict65: string) => {\n  const dict = s2(dict65);\n  return dict.length === 65 && new Set(dict).size === 65;\n};\n\ninterface PopState {\n  dict65: string;\n  input: string;\n  op: Op;\n}\n\nconst ERRSTR = s2('<ÈîôËØØ>').join('\\u200b');\n\nconst DEFAULT_DICT =\n  'ÂØåÂº∫Ê∞ë‰∏ªÊñáÊòéÂíåË∞êËá™Áî±Âπ≥Á≠âÂÖ¨Ê≠£Ê≥ïÊ≤ªÁà±ÂõΩÊï¨‰∏öËØö‰ø°ÂèãÂñÑÁÉ≠Á•ñ‰∏∫Ëç£ÊúçÂä°‰∫∫Â¥áÂ∞öÁßëÂ≠¶ËæõÂã§Âä≥Âä®Â•ΩÂõ¢Áªì‰∫íÂä©ÂÆûÂÆàËßÅ‰πâÈÅµÁ∫™Ëâ∞Ëã¶Â•ãÊñóÈ™ÑËµ¢Â•áËøπÊÑüÊÅ©ËøõÊ≠•Ê¢¶ÊÉ≥üòä';\n\nconst debouncedPushState = debounce(({ dict65, input, op }: PopState) => {\n  const url = new URL(window.location.href);\n  if (dict65 !== DEFAULT_DICT) url.searchParams.set('d', dict65);\n  if (input) url.searchParams.set('i', input);\n  if (op === Op.Decode) url.searchParams.set('op', 'decode');\n  window.history.pushState({ dict65, input, op }, document.title, url);\n}, 500);\n\nconst App: FC = () => {\n  const [dict65, setDict65] = useState(DEFAULT_DICT);\n  const [input, setInput] = useState('');\n  const [op, setOp] = useState(Op.Encode);\n\n  const [output, setOutput] = useState('');\n\n  const outputRef = useRef<HTMLInputElement>();\n\n  const dictIs65 = is65(dict65);\n\n  const outputError = output === ERRSTR;\n\n  useEffect(() => {\n    let out = ERRSTR;\n    if (dictIs65)\n      try {\n        out = run(op, dict65, input);\n      } catch (_) {}\n    setOutput(out);\n    if (out !== ERRSTR) {\n      debouncedPushState({ dict65, input, op });\n    }\n  }, [dict65, dictIs65, input, op]);\n\n  useEffect(() => {\n    const search = new URLSearchParams(window.location.search);\n    const d = search.get('d');\n    const i = search.get('i');\n    const o = search.get('o');\n    if (d) setDict65(d);\n    if (i) setInput(i);\n    if (o === 'decode') setOp(Op.Decode);\n    const handlePopstate = ({\n      state: { dict65, input, op },\n    }: {\n      state: PopState;\n    }) => {\n      setDict65(dict65);\n      setInput(input);\n      setOp(op);\n    };\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Grid\n        container\n        component=\"div\"\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        style={{ margin: '20px 0' }}\n      >\n        <Grid item>\n          <TextField\n            multiline\n            rows={5}\n            label=\"Â≠óÂÖ∏\"\n            variant=\"outlined\"\n            value={dict65}\n            error={!dictIs65}\n            helperText=\"65‰∏™ÂîØ‰∏ÄÂ≠óÁ¨¶\"\n            style={{ width: 300 }}\n            onChange={(e) => setDict65(e.currentTarget.value)}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            multiline\n            rows={10}\n            label=\"ËæìÂÖ•\"\n            variant=\"outlined\"\n            value={input}\n            error={outputError && dictIs65}\n            style={{ width: 300 }}\n            onChange={(e) => setInput(e.currentTarget.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Grid container component=\"label\" alignItems=\"center\">\n            <Grid item>ÁºñÁ†Å</Grid>\n            <Grid item>\n              <Switch\n                color=\"primary\"\n                checked={op === Op.Decode}\n                onChange={() =>\n                  setOp((op) => (op === Op.Decode ? Op.Encode : Op.Decode))\n                }\n              />\n            </Grid>\n            <Grid item>Ëß£Á†Å</Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <TextField\n            multiline\n            rows={10}\n            label=\"ËæìÂá∫\"\n            variant=\"outlined\"\n            value={output}\n            style={{ width: 300 }}\n            InputProps={{ readOnly: true }}\n            inputRef={outputRef}\n            error={outputError}\n            onClick={() => {\n              if (output && output !== ERRSTR) {\n                outputRef.current?.select();\n                if (navigator.clipboard) navigator.clipboard.writeText(output);\n                else document.execCommand('copy');\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}